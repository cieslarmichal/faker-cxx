#include "string_data.h"

namespace faker::string::data {
const std::string_view upperCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
const std::string_view lowerCharacters = "abcdefghijklmnopqrstuvwxyz";
const std::string_view numericCharactersWithoutZero = "123456789";
const std::string_view numericCharacters = "0123456789";
const std::string_view mixedAlphaCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
const std::string_view lowerAlphanumericCharacters = "abcdefghijklmnopqrstuvwxyz0123456789";
const std::string_view upperAlphanumericCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
const std::string_view mixedAlphanumericCharacters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
const std::string_view hexUpperCharacters = "0123456789ABCDEF";
const std::string_view hexLowerCharacters = "0123456789abcdef";
const std::string_view symbolCharacters = "~`!@#$%^&*()_-+={[}]|:;\"'<,>.?/";

const std::unordered_set<char> lowerCharSet {
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
};
const std::unordered_set<char> upperCharSet {
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
};
const std::unordered_set<char> mixedAlphaCharSet {
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
};
const std::unordered_set<char> hexUpperCharSet { 'A', 'B', 'C', 'D', 'E', 'F', '0', '1', '2', '3',
    '4', '5', '6', '7', '8', '9' };
const std::unordered_set<char> hexLowerCharSet { 'a', 'b', 'c', 'd', 'e', 'f', '0', '1', '2', '3',
    '4', '5', '6', '7', '8', '9' };
const std::unordered_set<char> digitSet { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9' };
const std::unordered_set<char> utf16CharSet {
    '!',
    '"',
    '#',
    '$',
    '%',
    '&',
    '\'',
    '(',
    ')',
    '*',
    '+',
    ',',
    '-',
    '.',
    '/',
    '0',
    '1',
    '2',
    '3',
    '4',
    '5',
    '6',
    '7',
    '8',
    '9',
    ':',
    ';',
    '<',
    '=',
    '>',
    '?',
    '@',
    'A',
    'B',
    'C',
    'D',
    'E',
    'F',
    'G',
    'H',
    'I',
    'J',
    'K',
    'L',
    'M',
    'N',
    'O',
    'P',
    'Q',
    'R',
    'S',
    'T',
    'U',
    'V',
    'W',
    'X',
    'Y',
    'Z',
    '[',
    '\\',
    ']',
    '^',
    '_',
    '`',
    'a',
    'b',
    'c',
    'd',
    'e',
    'f',
    'g',
    'h',
    'i',
    'j',
    'k',
    'l',
    'm',
    'n',
    'o',
    'p',
    'q',
    'r',
    's',
    't',
    'u',
    'v',
    'w',
    'x',
    'y',
    'z',
    '{',
    '|',
    '}',
};

const std::unordered_map<StringCasing, std::unordered_set<char>> stringCasingToAlphaCharSetMapping {
    { StringCasing::Lower, lowerCharSet },
    { StringCasing::Upper, upperCharSet },
    { StringCasing::Mixed, mixedAlphaCharSet },
};

}
